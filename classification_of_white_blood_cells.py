# -*- coding: utf-8 -*-
"""BloodCellnew.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1L-ZeNID-o0D_dRvUH_lUUltahflYfiGz

#Code to Install Libraries
"""

# Ultralytics YOLO ve PyTorch kütüphanelerini yükleme kodu
!pip install ultralytics
!pip install torch

"""# Training"""

import os # Dosya ve dizin işlemleri için gerekli modül
from ultralytics import YOLO  # YOLO modeli için ultralytics kütüphanesi
import torch  # PyTorch kütüphanesi; tensor işlemleri ve GPU kullanımı için

# GPU kullanımı kontrolü: CUDA mevcutsa cuda, değilse cpu kullanması için
device = 'cuda' if torch.cuda.is_available() else 'cpu'

# Veri setinin bulunduğu path
DATA_DIR = "/content/drive/MyDrive/bloodcellProject/Data.b"

# YOLO sınıflandırma modeli yüklmesi; 'yolov8x-cls.pt'
model = YOLO("yolov8x-cls.pt")


# Modelin eğitimi başlatılır
results = model.train(data=DATA_DIR,  # Eğitim verilerinin dizini
                      project='/content/drive/MyDrive/bloodcellProject/runs_bloodcell', # Eğitim sonuçlarının kaydedileceği dizin
                      epochs=5, # Eğitim döngüsü sayısı (epoch)
                      auto_augment = False, # Otomatik veri artırma (augmentation) devre dışı
                      mixup = 0,  # Veri karıştırma tekniği (mixup) devre dışı
                      shear= 0, # Görüntü kesme (shear) işlemi devre dışı
                      erasing = 0,  # Rastgele silme (random erasing) devre dışı
                      imgsz=500,  # Eğitim sırasında kullanılacak görüntü boyutu (500x500 piksel)
                      lr0=0.001,  # Başlangıç öğrenme oranı (learning rate)
                      optimizer='Adam', # Kullanılacak optimizasyon algoritması: Adam
                      cache=True) # Veri setinin önbelleğe alınması; eğitim sürecini hızlandırır

"""#Test"""

from ultralytics import YOLO

# Modeli yüklemek için
model = YOLO("/content/drive/MyDrive/bloodcellProject/runs_bloodcell/train3/weights/best.pt")

# Test resmi üzerinde tahmin yaptırmak için
results = model.predict("/content/drive/MyDrive/bloodcellProject/test/neuimg_t1.jpg",show=True)

# Sonuçları yazdır
print(results)

"""#Class Prediction Visualization"""

from ultralytics import YOLO
import cv2  # Görüntü işleme için gerekli
import matplotlib.pyplot as plt  # Görüntü göstermek için gerekli

# Modeli yüklemek için
model = YOLO("/content/drive/MyDrive/bloodcellProject/runs_bloodcell/train3/weights/best.pt")

# Görüntüyü okuması için
image_path = "/content/drive/MyDrive/bloodcellProject/test/eosimg_t1.jpg"
image = cv2.imread(image_path)
image = cv2.cvtColor(image, cv2.COLOR_BGR2RGB)  # OpenCV'den okunan görüntüyü RGB'ye dönüştür

# Tahmin yapma kodu
results = model.predict(image, conf=0.7)

# Sınıf tahminini almak için
for result in results:
    class_probs = result.probs  # Sınıf olasılıklarını alması için
    top_class_index = class_probs.top1  # En yüksek güven skoruna sahip sınıfın indeksi
    class_name = result.names[top_class_index]
    confidence = class_probs.data[top_class_index].item()

    # Sınıf adını görüntüye eklemesi için
    cv2.putText(image, f"{class_name} {confidence:.2f}", (10, 50),
                cv2.FONT_HERSHEY_SIMPLEX, 1, (255, 0, 0), 2)

# Görüntüyü göstermesi için
plt.imshow(image)
plt.axis('off')
plt.show()